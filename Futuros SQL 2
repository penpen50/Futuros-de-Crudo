

/************************/
--For RBC
--It will be base on box color

Select top 100 * from #tmp7
drop table if exists #tmp8

--Declare @SD_Entry decimal(4,2);
Declare @SD_Target decimal(4,2);
Declare @SD_SL decimal(4,2);
Declare @plus_tick decimal(4,2);

set @SD_Target=1.0;
set @SD_SL=-0.9;
set @plus_tick=3;
--set @SD_Entry=(Select[SessionClose] from #tmp7);

--Entry must be in the body of the session
--Entry must be before confirmation, otherwise no entry

Select a.*,
	[SessionClose] as [Entry],
	case when Timeonly in ('20:30:00','04:00:00','10:30:00') then 1 else 0 end as [Qualify_Entry_Time],
	[IDR_High]+(@SD_SL*10*[SD_Size])-(0.01*@plus_tick) as [SL],
	case when [Low] <=([IDR_high]+(@SD_SL*10*[SD_Size])-(0.01*@plus_tick)) then 1 else 0 end as [SL_hit],
	[IDR_high]+(@SD_Target*10*SD_Size) as [TP],
	case when [High]>=([IDR_high]+(@SD_Target*10*SD_Size)) then 1 else 0 end as [TP_hit]
into #tmp8
from #tmp7 a
	where [Session] in ('ADR','ODR','RDR') and DR_Box='Other' and [Box Color] in ('Green') and [M7Box_Color_Close_SD]>=-0.8
union all 
Select a.*,
	[SessionClose] as [Entry],
	case when Timeonly in ('20:30:00','04:00:00','10:30:00') then 1 else 0 end as [Qualify_Entry_Time],
	[IDR_Low]-(@SD_SL*10*[SD_Size])+(0.01*@plus_tick) as [SL],
	case when [High] >=([IDR_Low]-(@SD_SL*10*[SD_Size])+(0.01*@plus_tick)) then 1 else 0 end as [SL_hit],
	[IDR_Low]-(@SD_Target*10*SD_Size) as [TP],
	case when [Low]>=([IDR_Low]-(@SD_Target*10*SD_Size)) then 1 else 0 end as [TP_hit]
from #tmp7 a
	where [Session] in ('ADR','ODR','RDR') and DR_Box='Other' and [Box Color] in ('Red') and [M7Box_Color_Close_SD]>=-0.8
union all 
Select a.*,
	[SessionClose] as [Entry],
	case when Timeonly in ('20:30:00','04:00:00','10:30:00') then 1 else 0 end as [Qualify_Entry_Time],
	[SessionClose]+(10*[SD_Size])-(0.01*@plus_tick) as [SL],--if close below -0.8, then use 1SD+3tick as SL
	case when [Low] <=([SessionClose]+(10*[SD_Size])-(0.01*@plus_tick)) then 1 else 0 end as [SL_hit],
	[IDR_High]+(@SD_Target*10*SD_Size) as [TP],
	case when [High]>=([IDR_High]+(@SD_Target*10*SD_Size)) then 1 else 0 end as [TP_hit]
from #tmp7 a
where [Session] in ('ADR','ODR','RDR') and DR_Box='Other' and [Box Color] in ('Green') and [M7Box_Color_Close_SD]<-0.8
union all 
Select a.*,
	[SessionClose] as [Entry],
	case when Timeonly in ('20:30:00','04:00:00','10:30:00') then 1 else 0 end as [Qualify_Entry_Time],
	[SessionClose]-(@SD_SL*10*[SD_Size])+(0.01*@plus_tick) as [SL],--if close below -0.8, then use 1SD+3tick as SL
	case when [High] >=([SessionClose]-(@SD_SL*10*[SD_Size])+(0.01*@plus_tick)) then 1 else 0 end as [SL_hit],
	[IDR_Low]-(@SD_Target*10*SD_Size) as [TP],
	case when [Low]<=([IDR_Low]-(@SD_Target*10*SD_Size)) then 1 else 0 end as [TP_hit]
from #tmp7 a
where [Session] in ('ADR','ODR','RDR') and DR_Box='Other' and [Box Color] in ('Red') and [M7Box_Color_Close_SD]<-0.8

Select top 10 * from #tmp8
drop table if exists #tmp9
Select a.DR_date,a.[Session],a.[Conf_Direction],a.[Box Color],
	a.FirstEntryTime,
	b.Stop_Out_Time
into #tmp9
from 
	(Select DR_Date,[Session],Conf_Direction,[Box Color]'
		cast(min(TradingDateTime) as Time) as FirstEntryTime
		from #tmp8
	where [Qualify_Entry_Time]=1
	group by DR_Date,[Session],[Conf_Direction,[Box Color]) a
left join
	(Select DR_date,[Session],
		cast(min(TradingDateTime) as Time) as [Stop_Out_Time]
	from #tmp8
where [SL_Hit]=1 group by DR_date,[Session])b
on a.DR_date=b.DR_date and a.[Session]=b.[Session]


Select * from #tmp9
drop table if exists #FirstEntry

Select DR_date,[Session],[Conf_Direction],[Box Color],
	cast(min(TradingDateTime) as Time) as FirstEntryTime
	into #FirstEntry
from #tmp8
where [Qualify_Entry_Time]=1
group by DR_date,[Session],Conf_Direction,[Box Color]

drop table if exists #TPreach

Select c.DR_date,c.[Session],
	cast(min(TradingDateTime) as Time) as [TP_Reach_Time]
into #TPreach
from #tmp8c
	join #FirstEntry fe on c.DR_date=fe.DR_Date and c.[Session]=fe.[Session]--inner join
where [TP_hit]=1 and c.[Timeonly]>=fe.FirstEntryTime group by c.DR_date,c.[Session]

drop table if exists #tmp10
Select a.*,
		   b.[TP_Reach_Time]
			 into #tmp10
		   from #tmp9 a
left join
			 #TPreach b
on a.DR_date=b.DR_date and a.[session]=b.[session]

Select * from #tmp10

--Include also dates with no entry

drop table if exists #tmp11

Select DR_date,[session],Conf_Direction, cast(null as Time) as FirstEntryTime	
	into #tmp11
from #tmp8
group by DR_date,[session],Conf_Direction
having sum (Qualify_Entry_Time)=0

drop table if exists #tmp12
Select a.*,b.Stop_Out_Time,c.[TP_Reach_Time]
	into #tmp12
	from #tmp11 a
left join
	(Select DR_date,[session],Conf_Direction,
			cast(min(TradingDateTime) as Time) as [Stop_Out_Time]
from #tmp8
	where [SL_hit]=1 group by DR_date,[session],[Conf_Direction])b
on a.DR_date=b.DR_date and a.[session]=b.[session]
left join
	(Select DR_date,[Session],
			cast(min(TradingDateTime) as Time) as [TP_Reach_Time]
from #tmp8
	where [TP_hit]=1 group by DR_date,[session])c
on a.DR_date=c.DR_date and a.[session]=c.[session]

--Combine dates with and without entry

drop table if exists #Result

Select * into #Result
	from #tmp10
union all
Select * from #tmp12

Select * from #tmp12
Select * from #Result

--Determine if the entry is a success or failure
drop table if exists #tmp13

Select a.*,
	case when FirstEntrytime is null then 'NoEntry'
		   when FirstEntrytime is null and Stop_Out_Time is null and TP_Reach_Time is null then 'Exit'--TP not reach but also did not hit the SL
			 when FirstEntrytime is not null and Stop_Out_Time is not null and TP_Reach_Time is null then 'Fail'
			 when FirstEntryTime is not null and Stop_Out_Time is null and TP_Reach_Time is not null then 'Success'
			 when FirstEntryTime is not null and Stop_Out_Time is not null and TP_Reach_Time is not null and 			TP_Reach_Time<Stop_Out_Time then 'Success'--TPreach before any SL
			 when FirstEntryTime is not null and Stop_Out_Time is not null and TP_Reach_Time is not null and 			TP_Reach_Time>=Stop_Out_Time then 'Fail'
	end as [Outcome]
into #tmp13
from #Result a
order by DR_date desc

Select * from #tmp13
Select * from #tmp8 order by TradingDateTime 

--Join







